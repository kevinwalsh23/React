React Components: State and Props

Each component can store its own local information in its State
Only class components can have local State
State declared within constructor 
this.state = {}

State should be modified only using setState()
JSX attributes passe into copmonent as single object
accessed with this.props.variable
State information passed to child compnents as props
Handling Events
similiar to way you how events on Dom elements
use camelCase

<Card OnClick={() => this.onDishSelect(dish)}>

Lifting State Up
-several components can share same data
--can send data back up to ancestor components

Lists and Keys
handled similiar to javascript
map js function allows to iterate over Lists
Keys should be given to elements in the array
Unique ids allow for all items to be properly iterated over
Ids let react know what items have been removed/added
React only modifies only parts of DOM tree that needs to be updated

Pass information to child component from parent component using props
List state data up to parent, make available to all other children components through props

React Components: Lifecycle Methods
React app made of multiple react components
Creation > Mounting > Updating > Unmounting > disapearance 

Mounting Methods
called when instance of component is being created and inserted in the DOM
constructor()
getDerivedStateFromProps()
render()
componentDidMount()
componentWillMount() older method that is deprecated

Components
props > properties or the data for the component

Dish Detail component only took props, no state
Presentational component because only dependent on input
Container component, store state and pass to children
Skinny; just render the view
fat: track more data in state

Presentational
-mainly concerned with rendering the view aka markup
Render view based on data passed in through props
Do not maintain own local state
Depend on parent to pass in app state to render view

Container:
responsible for making things work: data fetching, state updates
make use of presentational components for the actual rendering
can wrap presentational components in wrapping divs
Not responsible for contructing views
Provide data to presentational component in terms of props
Maintain state and communicate with data sources

React Lifecycle Methods

Functional Components
simplest way to define React components
JS function that returns a React Element, or collection of react elements
Receives props as parameter
Cannot have local state of access lifecycle hooks

React Virtual DOM
Browser DOM is browser object
Virtual DOm is React object
-lightweight representation of browser DOM
-in memory tree data structure of plain js objects
-manipulations extremely fast compared to modifying browser DOM
created completely from scratch on every setState

Updating DOM
Diffing algo will detect all nodes that are changed
updates enture subtree if diffing detects two elements are of diff types
using key you can hint child elements as stable
no need to re render where keys do not change
